class AddOmniauthToPlayers < ActiveRecord::Migration[7.0]
  def change
    add_column :players, :country_code, :string
    add_column :players, :avatar_url, :string

    create_table :auth_providers, id: false do |t|
      t.column :name, :string, primary_key: true
      t.column :display_name, :string
      t.column :enabled, :boolean
    end

    create_table :player_auths do |t|
      t.bigint :uid, null: false
      t.string :uname, null: false
      t.json :raw

      t.references :player, null: false, foreign_key: true
      t.references(
        :auth_providers,
        type: :string,
        null: false,
        foreign_key: {
          to_table: :auth_providers,
          primary_key: :name,
          column: :provider
        }
      )

      t.index %i[auth_providers_id player_id uid], unique: true

      t.timestamps
    end

    # fixme: for some reason the column option is being ignored on line 25; references seems to be overwriting the property with the autogenerated one
    rename_column :player_auths, :auth_providers_id, :provider

    # create standard auth providers
    AuthProvider.insert_all(
      [{ name: "osu", display_name: "osu!", enabled: true }, { name: "discord", display_name: "Discord", enabled: true }]
    )

    reversible do |d|
      d.up do
        # move all previously registered osu_ids and discord_ids to the new player_auths table
        # users who didn't finish linking probably have name NULL, which we drop and have them restart
        # the registration all over
        players_to_migrate = Player.where.not(name: nil)
        puts("⚠️migrating #{players_to_migrate.all.count} existing players to new identities structure")

        players_to_migrate.each do |p|
          unless p.osu_id.nil?
            p.identities.build(
              uid: p.osu_id,
              provider: "osu",
              uname: p.name || "kela",
              created_at: p.osu_verified_on || p.created_at,
              raw: Hash.new
            )
          end
          unless p.discord_id.nil?
            p.identities.build(
              uid: p.discord_id,
              provider: "discord",
              uname: p.name || "kela",
              created_at: p.osu_verified_on || p.created_at,
              raw: Hash.new
            )
          end
          p.save!
        end
      end
    end

    # drop all the old columns
    remove_column :players, :osu_id, :bigint
    remove_column :players, :discord_id, :bigint
    remove_column :players, :osu_verified_on, :datetime
    remove_column :players, :osu_verified, :boolean

    drop_table :osu_auth_requests do |t|
      t.string "nonce", null: false
      t.boolean "resolved", default: false, null: false
      t.bigint "player_id", null: false
      t.bigint "discord_server_id"
      t.datetime "created_at", null: false
      t.datetime "updated_at", null: false
      t.index ["discord_server_id"], name: "index_osu_auth_requests_on_discord_server_id"
      t.index ["player_id"], name: "index_osu_auth_requests_on_player_id"
    end
  end
end
